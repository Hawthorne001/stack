{-# LANGUAGE CPP            #-}
{-# LANGUAGE PackageImports #-}
module StackSetupShim where
import Main
#if defined(MIN_VERSION_Cabal)
#if MIN_VERSION_Cabal(3,8,1)
import Distribution.PackageDescription
         ( PackageDescription, emptyHookedBuildInfo )
#else
import "Cabal" Distribution.PackageDescription
         ( PackageDescription, emptyHookedBuildInfo )
#endif
#else
import Distribution.PackageDescription
         ( PackageDescription, emptyHookedBuildInfo )
#endif
import Distribution.Simple
import Distribution.Simple.Build
import Distribution.Simple.Setup
         ( ReplFlags, fromFlag, replDistPref, replVerbosity )
import Distribution.Simple.LocalBuildInfo ( LocalBuildInfo )
-- | Temporary, can be removed if initialBuildSteps restored to Cabal's API.
#if defined(MIN_VERSION_Cabal)
#if MIN_VERSION_Cabal(3,11,0)
import Distribution.Simple.LocalBuildInfo
         ( ComponentLocalBuildInfo, componentBuildDir
         , withAllComponentsInBuildOrder
         )
import Distribution.Simple.Utils ( createDirectoryIfMissingVerbose )
import Distribution.Verbosity ( Verbosity )
#endif
#endif
import System.Environment ( getArgs )

mainOverride :: IO ()
mainOverride = do
    args <- getArgs
    if "repl" `elem` args && "stack-initial-build-steps" `elem` args
        then do
            defaultMainWithHooks simpleUserHooks
                { preRepl = \_ _ -> pure emptyHookedBuildInfo
                , replHook = stackReplHook
                , postRepl = \_ _ _ _ -> pure ()
                }
        else main

stackReplHook :: PackageDescription -> LocalBuildInfo -> UserHooks -> ReplFlags -> [String] -> IO ()
stackReplHook pkg_descr lbi hooks flags args = do
    let distPref = fromFlag (replDistPref flags)
        verbosity = fromFlag (replVerbosity flags)
    case args of
        ("stack-initial-build-steps":rest)
            | null rest -> initialBuildSteps distPref pkg_descr lbi verbosity
            | otherwise ->
                fail "Misuse of running Setup.hs with stack-initial-build-steps, expected no arguments"
        _ -> replHook simpleUserHooks pkg_descr lbi hooks flags args

-- | Temporary, can be removed if initialBuildSteps restored to Cabal's API.
#if defined(MIN_VERSION_Cabal)
#if MIN_VERSION_Cabal(3,11,0)
-- | Runs 'componentInitialBuildSteps' on every configured component.
initialBuildSteps ::
     FilePath -- ^"dist" prefix
  -> PackageDescription  -- ^mostly information from the .cabal file
  -> LocalBuildInfo -- ^Configuration information
  -> Verbosity -- ^The verbosity to use
  -> IO ()
initialBuildSteps distPref pkg_descr lbi verbosity =
    withAllComponentsInBuildOrder pkg_descr lbi $ \_comp clbi ->
        componentInitialBuildSteps distPref pkg_descr lbi clbi verbosity

-- | Creates the autogenerated files for a particular configured component.
componentInitialBuildSteps ::
     FilePath -- ^"dist" prefix
  -> PackageDescription  -- ^mostly information from the .cabal file
  -> LocalBuildInfo -- ^Configuration information
  -> ComponentLocalBuildInfo
  -> Verbosity -- ^The verbosity to use
  -> IO ()
componentInitialBuildSteps _distPref pkg_descr lbi clbi verbosity = do
  createDirectoryIfMissingVerbose verbosity True (componentBuildDir lbi clbi)
  writeBuiltinAutogenFiles verbosity pkg_descr lbi clbi
#endif
#endif
